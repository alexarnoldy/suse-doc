<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<book lang="en">
<bookinfo>
    <title>SUSE&#174; CaaS Platform Integration with SUSE Enterprise Storage on HPE&#174; Platforms</title>
    <author>
        <firstname>Bryan Gartner, SUSE &lt; Bryan.Gartner@SUSE.com &gt;</firstname>
    </author>
    <authorinitials>{</authorinitials>
<orgname>SUSE</orgname>
</bookinfo>
<chapter id="_use_case_overview">
<title>Use Case Overview</title>
<simpara>Quite often, the initial deployments of newly containerized microservices utilies simple, stateless APIs and functions. Yet, over time, as previous monolithic applications are migrated towards containers or as more complex service topologies are created, the need for stateful containers occurs. Due to the inherently resilient nature of container orchestration, having persistent volume stores that can be mounted where ever a container is launched then becomes a requirement. This can come either in the form of dynamically created volumes or for long-term retention persistent volumes. To address this, one of the best integrations between Kubernetes-based container-as-a-service infrastructure, like SUSE CaaS Platform is with Ceph-based software-defined storage infrastructure, such as SUSE Enterprise Storage.</simpara>
<section id="_target_audience">
<title>Target Audience</title>
<simpara>This document is intended for IT decision makers, architects, system administrators and technicians who are implementing the combination of a flexible, Kubernetes-based, container-as-a-service platform and Ceph-based storage for persistent volumes. The reader should be familiar with all of the traditional pillars of IT infrastructures&#8201;&#8212;&#8201;networking, computing and storage&#8201;&#8212;&#8201;along with their specific, local use cases for sizing, scaling and limitations within their environments.</simpara>
</section>
</chapter>
<chapter id="_integration">
<title>Integration</title>
<simpara>As mentioned in the <xref linkend="_use_case_overview"/> section, requiring both dynamic and static volumes is key to running stateful containerized microservices. One agile method to accomplish that is to integrate a Kubernetes-based container-as-a-service solution, like SUSE CaaS Platform with a Ceph-based, software-defined storage solution, like SUSE Enterprise Storage. Coupling this with the inherent value-add and multiple HPE system platform product lines yieldsagile, cost-effective and very performant options. These three solutions have the following key attributes:</simpara>
<variablelist>
<varlistentry>
<term>
Kubernetes-based container-as-a-serivce
</term>
<listitem>
<simpara>
SUSE CaaS Platform is an enterprise class container management solution that enables IT and DevOps professionals to more easily deploy, manage, and scale container-based applications and services. It includes Kubernetes to automate lifecycle management of modern applications, and surrounding technologies that enrich Kubernetes and make the platform itself easy to operate. As a result, enterprises that use SUSE CaaS Platform can reduce application delivery cycle times and improve business agility.  SUSE is focused on delivering an exceptional operator experience with SUSE CaaS Platform. With deep competencies in infrastructure, systems, process integration, platform security, lifecycle management and enterprise-grade support, SUSE aims to ensure IT operations teams can deliver the power of Kubernetes to their users quickly, securely and efficiently. With SUSE CaaS Platform you can:
</simpara>
<itemizedlist>
<listitem>
<simpara>
Achieve faster time to value with an enterprise-ready container management platform, built from industry leading technologies, and delivered as a complete package, with everything you need to quickly offer container services.
</simpara>
</listitem>
<listitem>
<simpara>
Simplify management and control of your container platform with efficient installation, easy scaling, and update automation.
</simpara>
</listitem>
<listitem>
<simpara>
Maximize return on your investment, with a flexible container services solution for today and tomorrow.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Ceph-based Persistent Storage
</term>
<listitem>
<simpara>
SUSE Enterprise Storage is an intelligent software-defined storage solution, powered by Ceph technology, which enables you to transform your enterprise storage infrastructure.  Providing IT organizations with a simple to manage, agile infrastructure with increased speed of delivery, durability and reliability. Accelerate innovation, reduce costs and alleviate proprietary hardware lock-in by transforming your enterprise storage infrastructure with a truly open, and unified intelligent software-defined storage solution. Let SUSE and our partners provide you with the most flexible enterprise-grade storage solution providing:
</simpara>
<itemizedlist>
<listitem>
<simpara>
A single truly unified software-defined storage cluster that provides applications with object, block and file system storage providing ubiquitous and universal access to your legacy and modern applications and automated durability of your data with high availability and disaster recovery options.
</simpara>
</listitem>
<listitem>
<simpara>
Unlimited scalability with a distributed storage cluster designed to scale to thousands of nodes and multi-hundred petabyte environments and beyond to meet your growing data requirements.
</simpara>
</listitem>
<listitem>
<simpara>
Utilize industry standard off-the-shelf hardware that is at minimum 30 percent less expensive than average capacity optimized solutions to drive significant CAPEX savings
</simpara>
</listitem>
<listitem>
<simpara>
Highly redundant storage infrastructure design maximizes application availability with no single points of failure.
</simpara>
</listitem>
<listitem>
<simpara>
Self-healing capabilities minimize storage administration involvement and optimize data placement, enabling rapid reconstruction of redundancy, maximizing system resiliency and availability.
</simpara>
</listitem>
<listitem>
<simpara>
Automated re-balancing and optimized data placement with an easy to manage intelligent solution that continuously monitors data utilization and infrastructure without any manual intervention and without growing IT staff.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
HPE Platforms
</term>
<listitem>
<simpara>
Utilizing the above software solutions with the server platforms offered by HPE provides many alternative for scale, cost-effectiveness and performance options that could align with local IT staff platform preferences. Server options abound in the <ulink url="https://www.hpe.com/uk/en/servers.html">HPE portfolio</ulink>, covering
</simpara>
<itemizedlist>
<listitem>
<simpara>
density-optimized - high performance and efficiency for big data and the most demanding workloads
</simpara>
</listitem>
<listitem>
<simpara>
mission-critical - systems of intelligence to fuel your digital transformation in a world where time and data are the new currency and business continuity is expected
</simpara>
</listitem>
<listitem>
<simpara>
composable - fully adaptable and ready for Hybrid-IT to future-proof your data center for today&#8217;s workloads and tomorrow&#8217;s disruptors
</simpara>
</listitem>
<listitem>
<simpara>
IoT - realize the potential of the Internet of Things to provide compute at the network edge
</simpara>
</listitem>
<listitem>
<simpara>
cloud - high-capacity, mass-compute open infrastructure with security and software to match
</simpara>
</listitem>
<listitem>
<simpara>
and virtualized use cases.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<simpara>These software solutions have tested across several HPE platforms with reference configurations available, listed on both the <ulink url="https://www.suse.com/partners/alliance/hpe/">SUSE</ulink> and <ulink url="https://h22168.www2.hpe.com/us/en/partners/suse/">HPE</ulink> alliance partner web sites.</simpara>
<note><simpara>Any <ulink url="https://www.suse.com/yessearch/">SUSE YES</ulink> certified HPE platform can be used for the physical nodes of either solution&#8217;s deployment, as long as the certification refers to the major version of the underlying SUSE operating system required by the solution release.</simpara></note>
<section id="_solution_prerequisites">
<title>Solution Prerequisites</title>
<simpara>Given the use case, the following software-defined solutions are assumed to be in place and running:</simpara>
<itemizedlist>
<listitem>
<simpara>
SUSE CaaS Platform
</simpara>
</listitem>
<listitem>
<simpara>
SUSE Enterprise Storage
</simpara>
</listitem>
</itemizedlist>
<simpara>While it is possible to implement the integration even with the basic, minimal configurations of each solution, the following additional best practices should be observed:</simpara>
<itemizedlist>
<listitem>
<simpara>
Network and Network Services
</simpara>
<variablelist>
<varlistentry>
<term>
Routable networks
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
an intranet or client-access network to access both solutions
</simpara>
</listitem>
<listitem>
<simpara>
each solution should have a "public" network, likely routable to the other one and to any client-facing network, yet can be intranet, on-premise only. The integration access happens across this network
</simpara>
</listitem>
<listitem>
<simpara>
an internet-facing network, if needed, to access cluster resources from beyond an organization&#8217;s internal networks
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Potentially non-routed networks
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
a Baseboard Management Control (BMC) network used to connect and control HPE iLO interfaces
</simpara>
</listitem>
<listitem>
<simpara>
SUSE CaaS Platform has a pair of internal cluster networks, that can be non-routable outside the cluster, but do need to be sized according to the number of workload containers to be deployed
</simpara>
</listitem>
<listitem>
<simpara>
SUSE Enterprise Storage, likewise also has a private network, which is used for backend data replication and should have capacity planned to address recovery and the number of replicas
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Services
</term>
<listitem>
<simpara>
As with most software-defined, cluster-based solutions, the following network services should be accessible:
</simpara>
<itemizedlist>
<listitem>
<simpara>
one or more valid Network Time Protocol (NTP) services, with all the cluster nodes configured to use this
</simpara>
</listitem>
<listitem>
<simpara>
one or more valid Domain Name Service (DNS) services, with all the cluster nodes registered
</simpara>
</listitem>
<listitem>
<simpara>
ensure access to software security updates and fixes by registering nodes to the <ulink url="http://scc.suse.com">SUSE Customer Center</ulink>, or by creating a local <ulink url="https://www.suse.com/documentation/sles-12/singlehtml/book_smt/book_smt.html">Subscription Management Tool</ulink> service.
</simpara>
</listitem>
<listitem>
<simpara>
a reliable Load Balancer (LB), to provide high-availability access to core Kubernetes Master API functions. This could be implemented with any number of technologies, including simple, HAProxy software configurations.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</listitem>
<listitem>
<simpara>
System Platform
For each of the software-defined solutions, ensure that each respective node not only meets the minimum requirements for that role, but also has the resource capacity to accommodate the expected number and type of workloads. These minimum guidelines are detailed in the respective solution deployment guides. For both solutions, performance and log monitoring capabilities can be deployed to help access the utilization metrics over time.
</simpara>
</listitem>
</itemizedlist>
<simpara>These prerequisites are summarized in the  following logical deployment diagram:</simpara>
<figure id="img-DeployLV"><title>Deployment Logical View</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="CaaSP-SES-Logical-Deploy.png"/>
  </imageobject>
  <textobject><phrase>Deployment-Logical-View</phrase></textobject>
</mediaobject>
</figure>
</section>
<section id="_integration_steps">
<title>Integration Steps</title>
<simpara>The remainder of this document is meant as a companion guide to the official network, system and software product deployment documentation, citing specific settings as needed for this reference implementation. Default settings are assumed to be in use unless otherwise cited to accomplish the respective best practices and design decisions herein.</simpara>
<tip><simpara>The prompt designated in the steps below help illustrate where to run each command and with what user access.</simpara></tip>
<simpara>To create the necessary integration from a Kubernetes-based SUSE CaaS Platform cluster and a Ceph-based storage cluster like SUSE Enterprise Storage, first start on the SUSE Enterprise Storage.</simpara>
<itemizedlist>
<listitem>
<simpara>
Log in to the respective Admin Node
</simpara>
</listitem>
<listitem>
<simpara>
Collect the list of Monitor Node IP Addresses from <emphasis>/etc/ceph/ceph.conf</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
Create and validate a dedicated storage pool (<emphasis>e.g. "caasp-pool"</emphasis>) for rbd-based applications using the following commands. Adjust the placement group size (<emphasis>e.g. "512"</emphasis>) as desired.
</simpara>
</listitem>
</itemizedlist>
<screen>root@ses-admin # ceph osd pool create caasp-pool 512
root@ses-admin # ceph osd pool ls
root@ses-admin # ceph osd pool application enable caasp-pool rbd
root@ses-admin # ceph osd pool application get caasp-pool</screen>
<itemizedlist>
<listitem>
<simpara>
Capture and encode the admin key, which will be used later
</simpara>
</listitem>
</itemizedlist>
<screen>root@ses-admin # ceph auth get-key client.admin | base64</screen>
<itemizedlist>
<listitem>
<simpara>
Create a specific user (<emphasis>e.g. "caasp"</emphasis>) with necessary capabilities to utilize the "caasp-pool", then capture and encode user the key, which will be used later
</simpara>
</listitem>
</itemizedlist>
<screen>root@ses-admin # ceph auth get-or-create client.caasp mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=caasp-pool' -o ceph.client. caasp.keyring
root@ses-admin # ceph auth get-key client.caasp | base64</screen>
<simpara>Then from the SUSE CaaS Platform, login to the respective Administration Node</simpara>
<itemizedlist>
<listitem>
<simpara>
Create the file <emphasis>ceph-secret-admin.yaml</emphasis>
</simpara>
</listitem>
</itemizedlist>
<programlisting language="yaml" linenumbering="unnumbered"># file - ceph-secret-admin.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ceph-secret-admin
  namespace: default
type: "kubernetes.io/rbd"
data:
  key: #insert output string from client.admin encode step</programlisting>
<itemizedlist>
<listitem>
<simpara>
Apply and validate deployment of the file <emphasis>ceph-secret-admin.yaml</emphasis>
</simpara>
</listitem>
</itemizedlist>
<screen>root@caasp-admin # kubectl apply -f ceph-secret-admin.yaml
root@caasp-admin # kubectl get secrets</screen>
<itemizedlist>
<listitem>
<simpara>
Create the file <emphasis>ceph-secret-caasp.yaml</emphasis>
</simpara>
</listitem>
</itemizedlist>
<programlisting language="yaml" linenumbering="unnumbered"># file - ceph-secret-caasp.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ceph-secret-caasp
  namespace: default
type: "kubernetes.io/rbd"
data:
  key: #insert output string from client.caasp encode step</programlisting>
<itemizedlist>
<listitem>
<simpara>
Apply and validate file <emphasis>ceph-secret-caasp.yaml</emphasis>
</simpara>
</listitem>
</itemizedlist>
<screen>root@caasp-admin # kubectl apply -f ceph-secret-caasp.yaml
root@caasp-admin # kubectl get secrets</screen>
<itemizedlist>
<listitem>
<simpara>
Create the file <emphasis>ses-rbd-storage-class.yaml</emphasis>, using the Monitor Node IP addresses collected earlier
</simpara>
</listitem>
</itemizedlist>
<programlisting language="yaml" linenumbering="unnumbered"># file - ses-rbd-storage-class.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ses-rbd-sc
provisioner: kubernetes.io/rbd
parameters:
  monitors: &lt;IPAddressMon1&gt;:6789, &lt;IPAddressMon2&gt;:6789, &lt;IPAddressMon3&gt;:6789
  adminId: admin
  adminSecretName: ceph-secret-admin
  adminSecretNamespace: default
  pool: caasp-pool
  userId: caasp
  userSecretName: ceph-secret-caasp</programlisting>
<itemizedlist>
<listitem>
<simpara>
Apply and validate persistent volume claim file <emphasis>ses-rbd-persistent-volume-claim.yaml</emphasis>
</simpara>
</listitem>
</itemizedlist>
<screen>root@caasp-admin # kubectl apply -f ses-rbd-persistent-volume-claim.yaml
root@caasp-admin # kubectl get pvc &lt;-n default&gt;</screen>
<simpara>Then to validate a working integration, create a simple container, like busybox, using the persistent volume claim. Refer to the "Creating Pods with Persistent Volumes" section of the <ulink url="https://www.suse.com/documentation/suse-caasp-3/">SUSE CaaS Platform Administration Guide</ulink>.</simpara>
<simpara>As needed, both SUSE CaaS Platform and SUSE Enterprise Storage can be scaled with additional resource nodes to provide more capacity, capabilities, and performance. Such operations are described in the respective administration guides.</simpara>
</section>
</chapter>
<chapter id="_summary">
<title>Summary</title>
<simpara>At this point you should have a working integration between SUSE CaaS Platform and SUSE Enterprise Storage. Volumes for containerized workloads can now be utilized, as needed and made available to where ever in the Kubernetes cluster that the workload is deployed. Beyond providing the Ceph-based RBD persistent storage for stateful containers, this integration can also be utilized as the backing store for monitoring and performance logs, for tools like Prometheus, plus for the visualization tools, like Grafana, to access as well.</simpara>
</chapter>
<chapter id="_resources">
<title>Resources</title>
<variablelist>
<varlistentry>
<term>
<ulink url="https://www.hpe.com/uk/en/servers.html">HPE Platforms</ulink>
</term>
<listitem>
<simpara>
<ulink url="http://h17007.www1.hpe.com/us/en/enterprise/servers/supportmatrix/suse_linux.aspx#.XIBSCKO1uV4">SUSE Linux Enterprise Server Certification and Support</ulink>, <ulink url="https://www.suse.com/yessearch/SResults.jsp?bulletinNumber=&amp;keywords=&amp;searchSelect=1&amp;productCategory=&amp;companyKey.type=companyName&amp;companyKey.max=25&amp;companyKey.format=Select&amp;companyKey.original=&amp;companyKey=258842&amp;companyKey.index=2&amp;input1=01-01-2001">SUSE YES Certified Bulletin Search</ulink>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<ulink url="https://www.suse.com/products/caas-platform/">SUSE CaaS Platform</ulink>
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Product Documentation - <ulink url="https://www.suse.com/documentation/suse-caasp-3/">https://www.suse.com/documentation/suse-caasp-3/</ulink>
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
<ulink url="https://www.suse.com/products/suse-enterprise-storage/">SUSE Enterprise Storage</ulink>
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Product Documentation - <ulink url="https://www.suse.com/documentation/suse-enterprise-storage-5/">https://www.suse.com/documentation/suse-enterprise-storage-5/</ulink>
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</chapter>
</book>
